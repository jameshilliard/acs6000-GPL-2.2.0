Index: u-boot-1.3.1/net/eth.c
===================================================================
--- u-boot-1.3.1.orig/net/eth.c	2007-12-06 01:21:19.000000000 -0800
+++ u-boot-1.3.1/net/eth.c	2008-02-27 18:34:48.000000000 -0800
@@ -412,13 +412,13 @@
 	struct eth_device* old_current;
 
 	if (!eth_current)
-		return 0;
+		return -1;
 
 	old_current = eth_current;
 	do {
-		debug ("Trying %s\n", eth_current->name);
+		printf ("Trying %s\n", eth_current->name);
 
-		if (eth_current->init(eth_current, bis)) {
+		if (eth_current->init(eth_current, bis) >= 0) {
 			eth_current->state = ETH_STATE_ACTIVE;
 
 			return 1;
@@ -428,7 +428,7 @@
 		eth_try_another(0);
 	} while (old_current != eth_current);
 
-	return 0;
+	return -1;
 }
 
 void eth_halt(void)
Index: u-boot-1.3.1/board/avocent/gsp/gsp-config-fecmode.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ u-boot-1.3.1/board/avocent/gsp/gsp-config-fecmode.c	2008-02-28 10:44:48.000000000 -0800
@@ -0,0 +1,41 @@
+#include <common.h>
+#include "gsp-config-fecmode.h"
+
+#ifdef CONFIG_AVOCENT_GSP
+int gsp_config_fecmode(int nb, int giga)
+{
+	DECLARE_GLOBAL_DATA_PTR;
+	bd_t *bd = gd->bd;
+	char aux[20], *tmp;
+	int set = 0;
+	unsigned char *mode;
+
+#ifdef CONFIG_HAS_ETH1
+	mode = (nb) ? &(bd->enet1_mode): &(bd->enet_mode);
+#else
+	mode = &(bd->enet_mode);
+#endif
+	sprintf(aux, "fecmode%d", nb + 1);
+	if ((tmp = getenv (aux)) == NULL) {
+		setenv(aux, "auto");
+		set = 1;
+		*mode = 0;
+	} else if (strcmp(tmp, "auto") == 0) {
+		*mode = 0;
+	} else if (strcmp(tmp, "10H") == 0   || strcmp(tmp, "10h") == 0) {
+		*mode = 1;
+	} else if (strcmp(tmp, "10F") == 0   || strcmp(tmp, "10f") == 0) {
+		*mode = 2;
+	} else if (strcmp(tmp, "100H") == 0  || strcmp(tmp, "100h") == 0) {
+		*mode = 3;
+	} else if (strcmp(tmp, "100F") == 0  || strcmp(tmp, "100f") == 0) {
+		*mode = 4;
+	} else {
+		setenv(aux, "auto");
+		set = 1;
+		*mode = 0;
+	}
+	return set;
+}
+#endif
+
Index: u-boot-1.3.1/board/avocent/gsp/gsp-config-fecmode.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ u-boot-1.3.1/board/avocent/gsp/gsp-config-fecmode.h	2008-02-27 18:34:48.000000000 -0800
@@ -0,0 +1 @@
+int gsp_config_fecmode(int, int);
Index: u-boot-1.3.1/include/asm-ppc/u-boot.h
===================================================================
--- u-boot-1.3.1.orig/include/asm-ppc/u-boot.h	2008-02-27 18:34:47.000000000 -0800
+++ u-boot-1.3.1/include/asm-ppc/u-boot.h	2008-02-28 10:46:27.000000000 -0800
@@ -113,6 +113,13 @@
 	unsigned char   bi_enet3addr[6];
 #endif
 
+#ifdef CONFIG_AVOCENT_GSP
+	unsigned char   enet_mode;
+#ifdef CONFIG_HAS_ETH1
+	unsigned char   enet1_mode;
+#endif
+#endif
+
 #if defined(CONFIG_405GP) || defined(CONFIG_405EP) || \
     defined(CONFIG_405EZ) || defined(CONFIG_440GX) || \
     defined(CONFIG_440EP) || defined(CONFIG_440GR) || \
Index: u-boot-1.3.1/drivers/net/tsec.c
===================================================================
--- u-boot-1.3.1.orig/drivers/net/tsec.c	2008-02-27 18:34:47.000000000 -0800
+++ u-boot-1.3.1/drivers/net/tsec.c	2008-02-28 10:45:56.000000000 -0800
@@ -110,7 +110,11 @@
 static void tsec_halt(struct eth_device *dev);
 static void init_registers(volatile tsec_t * regs);
 static void startup_tsec(struct eth_device *dev);
+#ifdef CONFIG_AVOCENT_GSP
+static int init_phy(struct eth_device *dev, int index);
+#else
 static int init_phy(struct eth_device *dev);
+#endif
 void write_phy_reg(struct tsec_private *priv, uint regnum, uint value);
 uint read_phy_reg(struct tsec_private *priv, uint regnum);
 struct phy_info *get_phy_info(struct eth_device *dev);
@@ -185,7 +189,11 @@
 #endif
 
 	/* Try to initialize PHY here, and return */
+#ifdef CONFIG_AVOCENT_GSP
+	return init_phy(dev, index);
+#else
 	return init_phy(dev);
+#endif
 }
 
 /* Initializes data structures and registers for the controller,
@@ -232,7 +240,11 @@
 	startup_tsec(dev);
 
 	/* If there's no link, fail */
+#ifdef CONFIG_AVOCENT_GSP
+	return (priv->link)?1:-1;
+#else
 	return priv->link;
+#endif
 
 }
 
@@ -292,11 +304,20 @@
  * properly.  If the PHY is not recognized, then return 0
  * (failure).  Otherwise, return 1
  */
+#ifdef CONFIG_AVOCENT_GSP
+static int init_phy(struct eth_device *dev, int index)
+#else
 static int init_phy(struct eth_device *dev)
+#endif
 {
 	struct tsec_private *priv = (struct tsec_private *)dev->priv;
 	struct phy_info *curphy;
 	volatile tsec_t *regs = (volatile tsec_t *)(TSEC_BASE_ADDR);
+#ifdef CONFIG_AVOCENT_GSP
+	DECLARE_GLOBAL_DATA_PTR;
+	bd_t *bd = gd->bd;
+	unsigned char op;
+#endif
 
 	/* Assign a Physical address to the TBI */
 	regs->tbipa = CFG_TBIPA_VALUE;
@@ -327,7 +348,32 @@
 
 	priv->phyinfo = curphy;
 
+#ifdef CONFIG_AVOCENT_GSP
+#ifdef CONFIG_HAS_ETH1
+	op = (index) ? bd->enet1_mode : bd->enet_mode;
+#else
+	op = bd->enet_mode;
+#endif
+	switch(op) {
+	case 0:
+		phy_run_commands(priv, priv->phyinfo->config);
+		break;
+	case 1:
+		phy_run_commands(priv, priv->phyinfo->config10h);
+		break;
+	case 2:
+		phy_run_commands(priv, priv->phyinfo->config10f);
+		break;
+	case 3:
+		phy_run_commands(priv, priv->phyinfo->config100h);
+		break;
+	case 4:
+		phy_run_commands(priv, priv->phyinfo->config100f);
+		break;
+	}
+#else
 	phy_run_commands(priv, priv->phyinfo->config);
+#endif
 
 	return 1;
 }
@@ -349,6 +395,56 @@
  */
 uint mii_parse_sr(uint mii_reg, struct tsec_private * priv)
 {
+#ifdef CONFIG_AVOCENT_GSP
+	unsigned short reg, mask;
+	int i;
+	/*
+	 * Check if PHY was doing autonegotiation or if it is forced
+	 */
+	reg = read_phy_reg(priv, MIIM_CONTROL);
+
+	if (reg & MIIM_ANEN) {
+		mask = MIIM_STATUS_AN_DONE;
+	} else {
+		mask = MIIM_STATUS_LINK;
+	}
+
+	reg = read_phy_reg(priv, MIIM_STATUS);
+
+	priv->link = 1;
+	if (!(reg & mask)) {
+		if (mask & MIIM_STATUS_AN_DONE) {
+			puts ("Waiting for PHY auto negotiation to complete");
+		} else {
+			puts ("Waiting for link to turn up");
+		}
+		i = 0;
+
+                while (1) {
+			/*
+			 * Timeout reached ?
+			 */
+			if (i > PHY_AUTONEGOTIATE_TIMEOUT) {
+				puts (" TIMEOUT !\n");
+				priv->link = 0;
+				break;
+			}
+
+			if ((i++ % 1000) == 0) {
+				putc ('.');
+			}
+			udelay (1000);  /* 1 ms */
+
+			reg = read_phy_reg(priv, MIIM_STATUS);
+
+			if (reg & mask) {
+				puts (" done\n");
+				udelay (500000);        /* another 500 ms (results in faster booting) */
+				break;
+			}
+		}
+	}
+#else
 	/*
 	 * Wait if the link is up, and autonegotiation is in progress
 	 * (ie - we're capable and it's not done)
@@ -384,7 +480,7 @@
 		else
 			priv->link = 0;
 	}
-
+#endif
 	return 0;
 }
 
@@ -910,7 +1006,7 @@
 	0x1410ca,
 	"Marvell 88E1149S",
 	4,
-	(struct phy_cmd[]){     /* config */
+	(struct phy_cmd[]){     /* config auto */
 		/* Reset and configure the PHY */
 		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
 		{0x1d, 0x1f, NULL},
@@ -924,6 +1020,56 @@
 		{MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 		{miim_end,}
 	},
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){     /* config 10 half */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{0x1d, 0x1f, NULL},
+		{0x1e, 0x200c, NULL},
+		{0x1d, 0x5, NULL},
+		{0x1e, 0x0, NULL},
+		{0x1e, 0x100, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, 0, NULL},
+		{miim_end,}
+	},
+	(struct phy_cmd[]){     /* config 10 full */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{0x1d, 0x1f, NULL},
+		{0x1e, 0x200c, NULL},
+		{0x1d, 0x5, NULL},
+		{0x1e, 0x0, NULL},
+		{0x1e, 0x100, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_DPLX, NULL},
+		{miim_end,}
+	},
+	(struct phy_cmd[]){     /* config 100 half */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{0x1d, 0x1f, NULL},
+		{0x1e, 0x200c, NULL},
+		{0x1d, 0x5, NULL},
+		{0x1e, 0x0, NULL},
+		{0x1e, 0x100, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_100_MBPS, NULL},
+		{miim_end,}
+	},
+	(struct phy_cmd[]){     /* config 100 full */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{0x1d, 0x1f, NULL},
+		{0x1e, 0x200c, NULL},
+		{0x1d, 0x5, NULL},
+		{0x1e, 0x0, NULL},
+		{0x1e, 0x100, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, NULL},
+		{miim_end,}
+	},
+#endif
 	(struct phy_cmd[]){     /* startup */
 		/* Status is read once to clear old link state */
 		{MIIM_STATUS, miim_read, NULL},
@@ -944,7 +1090,7 @@
 	0x02060c1,	/* 5461 ID */
 	"Broadcom BCM5461S",
 	0, /* not clear to me what minor revisions we can shift away */
-	(struct phy_cmd[]) { /* config */
+	(struct phy_cmd[]) { /* config auto */
 		/* Reset and configure the PHY */
 		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
 		{MIIM_GBIT_CONTROL, MIIM_GBIT_CONTROL_INIT, NULL},
@@ -953,6 +1099,32 @@
 		{MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 		{miim_end,}
 	},
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]) { /* config 10 half */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, 0, &mii_cr_init},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 10 full */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 100 half */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 100 full */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, &mii_cr_init},
+		{miim_end,}
+	},
+#endif
 	(struct phy_cmd[]) { /* startup */
 		/* Status is read once to clear old link state */
 		{MIIM_STATUS, miim_read, NULL},
@@ -971,7 +1143,7 @@
 	0x02060b1,	/* 5464 ID */
 	"Broadcom BCM5464S",
 	0, /* not clear to me what minor revisions we can shift away */
-	(struct phy_cmd[]) { /* config */
+	(struct phy_cmd[]) { /* config auto */
 		/* Reset and configure the PHY */
 		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
 		{MIIM_GBIT_CONTROL, MIIM_GBIT_CONTROL_INIT, NULL},
@@ -980,6 +1152,32 @@
 		{MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 		{miim_end,}
 	},
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]) { /* config 10 half */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, 0, &mii_cr_init},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 10 full */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config auto */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config auto */
+		/* Reset and configure the PHY */
+		{MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+		{MIIM_CONTROL, MIIM_CONTROL_DPLX|MIIM_CONTROL_100_MBPS, &mii_cr_init},
+		{miim_end,}
+	},
+#endif
 	(struct phy_cmd[]) { /* startup */
 		/* Status is read once to clear old link state */
 		{MIIM_STATUS, miim_read, NULL},
@@ -998,7 +1196,7 @@
 	0x01410c6,
 	"Marvell 88E1011S",
 	4,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
 			   /* Reset and configure the PHY */
 			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
 			   {0x1d, 0x1f, NULL},
@@ -1012,6 +1210,56 @@
 			   {MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {0x1d, 0x1f, NULL},
+			   {0x1e, 0x200c, NULL},
+			   {0x1d, 0x5, NULL},
+			   {0x1e, 0x0, NULL},
+			   {0x1e, 0x100, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, 0, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {0x1d, 0x1f, NULL},
+			   {0x1e, 0x200c, NULL},
+			   {0x1d, 0x5, NULL},
+			   {0x1e, 0x0, NULL},
+			   {0x1e, 0x100, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {0x1d, 0x1f, NULL},
+			   {0x1e, 0x200c, NULL},
+			   {0x1d, 0x5, NULL},
+			   {0x1e, 0x0, NULL},
+			   {0x1e, 0x100, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {0x1d, 0x1f, NULL},
+			   {0x1e, 0x200c, NULL},
+			   {0x1d, 0x5, NULL},
+			   {0x1e, 0x0, NULL},
+			   {0x1e, 0x100, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Status is read once to clear old link state */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1031,7 +1279,7 @@
 	0x01410cc,
 	"Marvell 88E1111S",
 	4,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
 			   /* Reset and configure the PHY */
 			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
 			   {0x14, 0x0cd2, NULL}, /* Delay RGMII TX and RX */
@@ -1041,6 +1289,32 @@
 			   {MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, 0, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Status is read once to clear old link state */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1072,7 +1346,7 @@
 	0x01410cd,
 	"Marvell 88E1145",
 	4,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
 			   /* Reset the PHY */
 			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
 
@@ -1092,6 +1366,80 @@
 			   {MIIM_CONTROL, MIIM_CONTROL_INIT, NULL},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Reset the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+
+			   /* Errata E0, E1 */
+			   {29, 0x001b, NULL},
+			   {30, 0x418f, NULL},
+			   {29, 0x0016, NULL},
+			   {30, 0xa2da, NULL},
+
+			   /* Configure the PHY */
+			   {MIIM_88E1011_PHY_SCR, MIIM_88E1011_PHY_MDI_X_AUTO,
+			    NULL},
+			   {MIIM_88E1145_PHY_EXT_CR, 0, &m88e1145_setmode},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, 0, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Reset the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+
+			   /* Errata E0, E1 */
+			   {29, 0x001b, NULL},
+			   {30, 0x418f, NULL},
+			   {29, 0x0016, NULL},
+			   {30, 0xa2da, NULL},
+
+			   /* Configure the PHY */
+			   {MIIM_88E1011_PHY_SCR, MIIM_88E1011_PHY_MDI_X_AUTO,
+			    NULL},
+			   {MIIM_88E1145_PHY_EXT_CR, 0, &m88e1145_setmode},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Reset the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+
+			   /* Errata E0, E1 */
+			   {29, 0x001b, NULL},
+			   {30, 0x418f, NULL},
+			   {29, 0x0016, NULL},
+			   {30, 0xa2da, NULL},
+
+			   /* Configure the PHY */
+			   {MIIM_88E1011_PHY_SCR, MIIM_88E1011_PHY_MDI_X_AUTO,
+			    NULL},
+			   {MIIM_88E1145_PHY_EXT_CR, 0, &m88e1145_setmode},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Reset the PHY */
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+
+			   /* Errata E0, E1 */
+			   {29, 0x001b, NULL},
+			   {30, 0x418f, NULL},
+			   {29, 0x0016, NULL},
+			   {30, 0xa2da, NULL},
+
+			   /* Configure the PHY */
+			   {MIIM_88E1011_PHY_SCR, MIIM_88E1011_PHY_MDI_X_AUTO,
+			    NULL},
+			   {MIIM_88E1145_PHY_EXT_CR, 0, &m88e1145_setmode},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, NULL},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Status is read once to clear old link state */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1110,7 +1458,7 @@
 };
 
 struct phy_info phy_info_M88E1116 = {
-	0x01410e1,
+	0x01410e4,
 	"Marvell 88E1116",
 	4,
 	(struct phy_cmd[]){	/* config */
@@ -1128,6 +1476,60 @@
 			   {MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, 0x8000, NULL},
+			   {22, 2, NULL},
+			   {21, 0x1070, NULL},
+			   {22, 0, NULL},
+			   {16, 0x6060, NULL},
+			   {22, 3, NULL},
+			   {16, 0x101e, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, 0, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, 0x8000, NULL},
+			   {22, 2, NULL},
+			   {21, 0x1070, NULL},
+			   {22, 0, NULL},
+			   {16, 0x6060, NULL},
+			   {22, 3, NULL},
+			   {16, 0x101e, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, 0x8000, NULL},
+			   {22, 2, NULL},
+			   {21, 0x1070, NULL},
+			   {22, 0, NULL},
+			   {16, 0x6060, NULL},
+			   {22, 3, NULL},
+			   {16, 0x101e, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Reset and configure the PHY */
+			   {MIIM_CONTROL, 0x8000, NULL},
+			   {22, 2, NULL},
+			   {21, 0x1070, NULL},
+			   {22, 0, NULL},
+			   {16, 0x6060, NULL},
+			   {22, 3, NULL},
+			   {16, 0x101e, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_RESET, NULL},
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, NULL},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Status is read once to clear old link state */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1148,7 +1550,7 @@
 	0x3f11,
 	"Cicada Cis8204",
 	6,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
 			   /* Override PHY config settings */
 			   {MIIM_CIS8201_AUX_CONSTAT,
 			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
@@ -1160,6 +1562,56 @@
 			    &mii_cis8204_setmode},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, 0, &mii_cr_init},
+			   {MIIM_CIS8204_SLED_CON, MIIM_CIS8204_SLEDCON_INIT,
+			    &mii_cis8204_fixled},
+			   {MIIM_CIS8204_EPHY_CON, MIIM_CIS8204_EPHYCON_INIT,
+			    &mii_cis8204_setmode},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {MIIM_CIS8204_SLED_CON, MIIM_CIS8204_SLEDCON_INIT,
+			    &mii_cis8204_fixled},
+			   {MIIM_CIS8204_EPHY_CON, MIIM_CIS8204_EPHYCON_INIT,
+			    &mii_cis8204_setmode},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+			   {MIIM_CIS8204_SLED_CON, MIIM_CIS8204_SLEDCON_INIT,
+			    &mii_cis8204_fixled},
+			   {MIIM_CIS8204_EPHY_CON, MIIM_CIS8204_EPHYCON_INIT,
+			    &mii_cis8204_setmode},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {MIIM_CIS8204_SLED_CON, MIIM_CIS8204_SLEDCON_INIT,
+			    &mii_cis8204_fixled},
+			   {MIIM_CIS8204_EPHY_CON, MIIM_CIS8204_EPHYCON_INIT,
+			    &mii_cis8204_setmode},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Read the Status (2x to make sure link is right) */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1180,7 +1632,7 @@
 	0xfc41,
 	"CIS8201",
 	4,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
 			   /* Override PHY config settings */
 			   {MIIM_CIS8201_AUX_CONSTAT,
 			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
@@ -1191,6 +1643,52 @@
 			   {MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Set up the interface mode */
+			   {MIIM_CIS8201_EXT_CON1, MIIM_CIS8201_EXTCON1_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, 0, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Set up the interface mode */
+			   {MIIM_CIS8201_EXT_CON1, MIIM_CIS8201_EXTCON1_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Set up the interface mode */
+			   {MIIM_CIS8201_EXT_CON1, MIIM_CIS8201_EXTCON1_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Override PHY config settings */
+			   {MIIM_CIS8201_AUX_CONSTAT,
+			    MIIM_CIS8201_AUXCONSTAT_INIT, NULL},
+			   /* Set up the interface mode */
+			   {MIIM_CIS8201_EXT_CON1, MIIM_CIS8201_EXTCON1_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Read the Status (2x to make sure link is right) */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1209,12 +1707,38 @@
 	0x3f1b,
 	"Vitesse VSC8244",
 	6,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
 			   /* Override PHY config settings */
 			   /* Configure some basic stuff */
 			   {MIIM_CONTROL, MIIM_CONTROL_INIT, &mii_cr_init},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   /* Override PHY config settings */
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, 0, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   /* Override PHY config settings */
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   /* Override PHY config settings */
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS, &mii_cr_init},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
+			   /* Override PHY config settings */
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CONTROL_100_MBPS|MIIM_CONTROL_DPLX, &mii_cr_init},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Read the Status (2x to make sure link is right) */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1234,7 +1758,60 @@
 	0x0181b88,
 	"Davicom DM9161E",
 	4,
-	(struct phy_cmd[]){	/* config */
+	(struct phy_cmd[]){	/* config auto */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_STOP, NULL},
+			   /* Do not bypass the scrambler/descrambler */
+			   {MIIM_DM9161_SCR, MIIM_DM9161_SCR_INIT, NULL},
+			   /* Clear 10BTCSR to default */
+			   {MIIM_DM9161_10BTCSR, MIIM_DM9161_10BTCSR_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CR_INIT, NULL},
+			   /* Restart Auto Negotiation */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_RSTAN, NULL},
+			   {miim_end,}
+			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config 10 half */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_STOP, NULL},
+			   /* Do not bypass the scrambler/descrambler */
+			   {MIIM_DM9161_SCR, MIIM_DM9161_SCR_INIT, NULL},
+			   /* Clear 10BTCSR to default */
+			   {MIIM_DM9161_10BTCSR, MIIM_DM9161_10BTCSR_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CR_INIT, NULL},
+			   /* Restart Auto Negotiation */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_RSTAN, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 10 full */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_STOP, NULL},
+			   /* Do not bypass the scrambler/descrambler */
+			   {MIIM_DM9161_SCR, MIIM_DM9161_SCR_INIT, NULL},
+			   /* Clear 10BTCSR to default */
+			   {MIIM_DM9161_10BTCSR, MIIM_DM9161_10BTCSR_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CR_INIT, NULL},
+			   /* Restart Auto Negotiation */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_RSTAN, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 half */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_STOP, NULL},
+			   /* Do not bypass the scrambler/descrambler */
+			   {MIIM_DM9161_SCR, MIIM_DM9161_SCR_INIT, NULL},
+			   /* Clear 10BTCSR to default */
+			   {MIIM_DM9161_10BTCSR, MIIM_DM9161_10BTCSR_INIT,
+			    NULL},
+			   /* Configure some basic stuff */
+			   {MIIM_CONTROL, MIIM_CR_INIT, NULL},
+			   /* Restart Auto Negotiation */
+			   {MIIM_CONTROL, MIIM_DM9161_CR_RSTAN, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config 100 full */
 			   {MIIM_CONTROL, MIIM_DM9161_CR_STOP, NULL},
 			   /* Do not bypass the scrambler/descrambler */
 			   {MIIM_DM9161_SCR, MIIM_DM9161_SCR_INIT, NULL},
@@ -1247,6 +1824,7 @@
 			   {MIIM_CONTROL, MIIM_DM9161_CR_RSTAN, NULL},
 			   {miim_end,}
 			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Status is read once to clear old link state */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1266,11 +1844,33 @@
 	0,
 	"Unknown/Generic PHY",
 	32,
-	(struct phy_cmd[]) { /* config */
+	(struct phy_cmd[]) { /* config auto */
 		{PHY_BMCR, PHY_BMCR_RESET, NULL},
 		{PHY_BMCR, PHY_BMCR_AUTON|PHY_BMCR_RST_NEG, NULL},
 		{miim_end,}
 	},
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]) { /* config 10 half */
+		{PHY_BMCR, PHY_BMCR_RESET, NULL},
+		{PHY_BMCR, 0, NULL},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 10 full */
+		{PHY_BMCR, PHY_BMCR_RESET, NULL},
+		{PHY_BMCR, PHY_BMCR_DPLX, NULL},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 100 half */
+		{PHY_BMCR, PHY_BMCR_RESET, NULL},
+		{PHY_BMCR, PHY_BMCR_100_MBPS, NULL},
+		{miim_end,}
+	},
+	(struct phy_cmd[]) { /* config 100 full */
+		{PHY_BMCR, PHY_BMCR_RESET, NULL},
+		{PHY_BMCR, PHY_BMCR_100_MBPS|PHY_BMCR_DPLX, NULL},
+		{miim_end,}
+	},
+#endif
 	(struct phy_cmd[]) { /* startup */
 		{PHY_BMSR, miim_read, NULL},
 		{PHY_BMSR, miim_read, &mii_parse_sr},
@@ -1322,6 +1922,24 @@
 			   {MIIM_CR, MIIM_CR_INIT, mii_cr_init},	/* autonegotiate */
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CR, MIIM_CR_INIT, mii_cr_init},	/* 10 half ?? */
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CR, MIIM_CR_INIT, mii_cr_init},	/* 10 full ?? */
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CR, MIIM_CR_INIT, mii_cr_init},	/* 100 half ??  */
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CR, MIIM_CR_INIT, mii_cr_init},	/* 100 full ?? */
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup - enable interrupts */
 			   /* { 0x12, 0x00f2, NULL }, */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1371,6 +1989,24 @@
 			   {MIIM_CONTROL, MIIM_DP83865_CR_INIT, NULL},
 			   {miim_end,}
 			   },
+#ifdef CONFIG_AVOCENT_GSP
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CONTROL, MIIM_DP83865_CR_INIT, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CONTROL, MIIM_DP83865_CR_INIT, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CONTROL, MIIM_DP83865_CR_INIT, NULL},
+			   {miim_end,}
+			   },
+	(struct phy_cmd[]){	/* config */
+			   {MIIM_CONTROL, MIIM_DP83865_CR_INIT, NULL},
+			   {miim_end,}
+			   },
+#endif
 	(struct phy_cmd[]){	/* startup */
 			   /* Status is read once to clear old link state */
 			   {MIIM_STATUS, miim_read, NULL},
@@ -1493,6 +2129,20 @@
 		phy_info[i]->config =
 		    (struct phy_cmd *)((uint) phy_info[i]->config
 				       + gd->reloc_off);
+#ifdef CONFIG_AVOCENT_GSP
+		phy_info[i]->config10h =
+		    (struct phy_cmd *)((uint) phy_info[i]->config10h
+				       + gd->reloc_off);
+		phy_info[i]->config10f =
+		    (struct phy_cmd *)((uint) phy_info[i]->config10f
+				       + gd->reloc_off);
+		phy_info[i]->config100h =
+		    (struct phy_cmd *)((uint) phy_info[i]->config100h
+				       + gd->reloc_off);
+		phy_info[i]->config100f =
+		    (struct phy_cmd *)((uint) phy_info[i]->config100f
+				       + gd->reloc_off);
+#endif
 		phy_info[i]->startup =
 		    (struct phy_cmd *)((uint) phy_info[i]->startup
 				       + gd->reloc_off);
Index: u-boot-1.3.1/drivers/net/tsec.h
===================================================================
--- u-boot-1.3.1.orig/drivers/net/tsec.h	2007-12-06 01:21:19.000000000 -0800
+++ u-boot-1.3.1/drivers/net/tsec.h	2008-02-27 18:34:48.000000000 -0800
@@ -82,6 +82,9 @@
 #define MIIM_CONTROL            0x00
 #define MIIM_CONTROL_RESET	0x00009140
 #define MIIM_CONTROL_INIT       0x00001140
+#define MIIM_CONTROL_100_MBPS   0x00002000
+#define MIIM_CONTROL_1000_MBPS  0x00000040
+#define MIIM_CONTROL_DPLX       0x00000100
 #define MIIM_CONTROL_RESTART    0x00001340
 #define MIIM_ANEN               0x00001000
 
@@ -552,6 +555,12 @@
     /* Called to configure the PHY, and modify the controller
      * based on the results */
     struct phy_cmd *config;
+#ifdef CONFIG_AVOCENT_GSP
+    struct phy_cmd *config10h;
+    struct phy_cmd *config10f;
+    struct phy_cmd *config100h;
+    struct phy_cmd *config100f;
+#endif
 
     /* Called when starting up the controller */
     struct phy_cmd *startup;
