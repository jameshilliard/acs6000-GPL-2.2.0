#!/bin/sh
#
# This is the update-modules script for Debian GNU/Linux.
# Copyright 1998-2001 Wichert Akkerman <wakkerma@debian.org>
# Licensed under the GNU GPL, version 2
#

MODCONFFILE=/etc/modules.conf
MODCONFTMPFILE="${MODCONFFILE}.$$"
MODULESFILE=/etc/modules
MODULESTMPFILE="${MODULESFILE}.$$"

set -e

if [ "$1" = "force" ] ; then
	force=1
else
	force=
fi

# Reset the sorting order since we depend on it
LC_COLLATE=C
export LC_COLLATE

depdir()
{
	dep=`grep '[[:space:]]*depfile' "${MODCONFFILE}" | tail -n 1 | sed -e 's/depfile=//' -e 's,/[^/]*$,,'`
	if [ -z "$dep" ] ; then
		dep="/lib/modules/`uname -r`"
	fi

	echo $dep
}

checkoverwrite() {
	local cfgfile="$1"

	if [ -f "$cfgfile" ]; then
		if ! sed -ne 1p "$cfgfile" | grep -q "^$HEADER" ; then
			echo "Error: the current $cfgfile is not automatically generated." >&2
			if [ -z "$force" ]; then
				echo "Use \"update-modules force\" to force (re)generation."
				exit 1
			else
				echo "force specified, (re)generating file anyway."
			fi
		fi
	fi
}

createfile() {
	cat <<EOF > "$1"
$HEADER"
#
# Please do not edit this file directly. If you want to change or add
# anything please take a look at the files in /etc/modutils and read
# the manpage for update-modules.
#
EOF
}

addfile() {
	local src="$1"
	local tgt="$2"

	echo "### update-modules: start processing $src" >> "$tgt"
	if [ -x "$src" ]; then
		if !  "$src" >> "$tgt" ; then
			echo "Error while executing $src, aborting" >&2
			exit 1
		fi
	else
		cat "$src" >> "$tgt"
	fi
	cat <<EOF >> "$tgt"

### update-modules: end processing $cfg

EOF
}

checkoverwrite "$MODCONFFILE"

if [ 0 -ne "`id -u`" ]; then
	echo "You have to be root to do this." >&2
	exit 2
fi

[ -e "$MODCONFFILE" ] && cp -f "$MODCONFFILE" "${MODCONFFILE}.old"

createfile "$MODCONFTMPFILE"
createfile "$MODULESTMPFILE"

mv "$MODCONFTMPFILE" "$MODCONFFILE"
mv "$MODULESTMPFILE" "$MODULESFILE"

# We also call depmod here to stop insmod from complaining that modules.conf
# is more recent then modules.dep
#
if [ -d "`depdir`" -a -f /proc/modules ]
then
	depmod -A || true
fi

exit 0

