#
# pslave.conf	Sample server configuration file.
#
# Your unit uses a virtual terminal concept.  Virtual terminals are
# named s1, s2, etc. Every virtual terminal should have a related
# physical device tty (without the "/dev/"). The tty parameter 
# must be configured and must be unique for each virtual terminal.
#
# There two types of parameters:
#
# 1) Global parameters
#    These parameters have the prefix "conf." Example of global parameters
#    are ethernet ip address, etc.
#
# 2) Terminal Parameters.
#    These parameters have prefixes "all.", "s1.", "s2.", etc.
#
#    The "all." entries are used as a template for all virtual terminals.
#    Setting all.speed to 9600 will set all virtual terminal (s1, s2,
#    s3, etc.) speeds to 9600.
#
#    Note that you can change the "all." settings one by one.
#    If the parameter "s4.speed 19200" appears later in the file, all terminals
#    except s4 will have speed 9600 bps and "s4" will have speed 19200 bps.
#

# Expansion Variables
#
# A list of format strings used by some parameters is provided here
# for reference.
#
# %l: login name 
# %L: stripped login name 
# %p: NAS port number 
# %P: protocol 
# %g: Process Id (getpid)
# %b: port speed 
# %i: local IP 
# %j: remote IP 
# %1: first byte (MSB) of remote IP 
# %2: second byte of remote IP 
# %3: third byte of remote IP 
# %4: fourth (LSB) byte of remote IP 
# %c: connect-info 
# %m: netmask 
# %t: MTU 
# %r: MRU 
# %I: idle timeout 
# %T: session timeout 
# %h: hostname 
# %%: % 

# Generic SAMPLE:
# all async ports at 9600 bps, 8N1, no flow control
# Eth IP address 192.169.160.10/24 (MTU=1500)
# protocol socket_server
# host IP 192.168.160.8/24
# removed: syslogd IP 192.168.160.1 (see syslog-ng.conf)
# Radius Server IP 192.168.160.3 (authentication and accounting)
# authentication none
#

#
# Ethernet configuration.
#
# These parameters should only be configured in the file
# /etc/network/ifcfg_eth0  _IF_ the customer will not be using the
# cy_ras/portslave aplications. If the cy_ras/portslave aplications are _NOT_
# used put all ifconfig commands for the ethernet directly in the
# /etc/network/ifcfg_eth0.  
#
# The cy_ras application OVERWRITES the ifcfg_eth0 file with the
# values configured here.
#
# Your unit can request all of its ethernet parameters to a DHCP server.
# The administrator can activate the dhcp client with more options changing
# the file /etc/network/dhcpcd_cmd.
#
# Valid values 0: DHCP disabled
#              1: DHCP active
#              2: DHCP active and the unit saves in flash the last ip assigned
#                 by the DHCP server.  (default)
#
#                 SEE the manual for more information.
#
conf.dhcp_client 0

#conf.eth_ip	192.168.160.10
#conf.eth_mask	255.255.255.0
conf.eth_mtu	1500

#
# Secondary IP address of ethernet
#

#conf.eth_ip_alias   192.168.161.10
#conf.eth_mask_alias 255.255.255.0

#
# Clustering IP address
# 
#  0.0.0.0     : old style (default)
#  <public ip> : clustering via NAT (iptables). Must have the ip used to
#                connect to the serial ports.
#
#conf.nat_clustering_ip	192.168.160.10

#
# Remote Network File System where data buffering will be written instead
# of the default directory '/var/run/DB'. The directory tree to which the 
# file will be written must be NFS-mounted.  
#
# If data buffering is turned on for port 1, for example, the data will be
# stored in /tmp/ts_data_buffer/{ttyS1.data | alias} on the machine
# with IP address 192.168.160.11. The remote host must have NFS installed
# and the administrator must create, export and allow reading/writing to
# this directory.
# The size of this file is not limited by the value of the parameter
# s1.data_buffering, though the value cannot be zero since a zero value turns
# off data buffering.
#
# The customer may use the option '-o' to pass parameters to the mount command.
# The "-o intr,soft" below avoids data buffering to get stuck if NFS goes down.
#
#conf.nfs_data_buffering -o intr,soft 192.168.160.11:/tmp/ts_data_buffer

#
# Lock directory - The lock directory is /var/lock for the unit.
#   It should not be changed unless the user decides to customize the 
#   operating system.
#
conf.lockdir	/var/lock
#
# Location of the rlogin binary that accepts the "-i" flag.
#
conf.rlogin	/usr/local/bin/rlogin-radius
#
# Location of our patched pppd with Radius linked in.
#
conf.pppd	/usr/local/sbin/pppd
#
# Location of the telnet utility. This can be the system telnet. (Optional)
#
conf.telnet	/usr/bin/telnet
#
# Location of ssh utility. This can be the system SSH. (Optional)
#
conf.ssh	/bin/ssh
#
# This parameter is only necessary when authentication is being 
# performed for a port.  When set to one, it is possible to log 
# in to the unit directly by placing a "!" before your 
# login name, then using your normal password. This is useful if the  
# Radius authentication server is down.
#
conf.locallogins	1
#

# the parameter syslog (syslog server) was removed from this file 
# (see the syslog-ng.conf file).

#
# Syslog facility for portslave
#
conf.facility	7

#
# Syslog facility for Data Buffering and Alarm
# DB_facility can be any value from 0-7. The number
# correlates to the syslog facilities local0 through local7.
#
conf.DB_facility	7

#
# User groups make the configuration of Port access restrictions 
# easier. The parameter s<nn>.users, that will be explained later,
# can be configured using a combination of group names and user names.
#
#conf.group mkt: paul, sam
#
#conf.group adm: joe, mark
#
#s1.users mkt, joe
#
#s2.users adm, sam

#
# Speed. All ports are set to 9600 baud rate, 8 bits, No parity, 1 stop bit.
# These values can be changed port by port later in the file.
#
all.speed       9600
all.datasize    8
all.stopbits    1
all.parity      none

# Media type - define media type and operation mode (half/full) duplex.
#
# valid values for all products :
#   rs232                  - RS232 (default value). 
#   rs232_half             - RS232 with RTS legacy half duplex
#   rs232_half_cts	       - RS232 with RTS legacy half duplex and CTS control
#
# valid values for TS100/TS110/ACS1 only :
#   rs485_half             - RS485 half duplex without terminator 
#   rs485_half_terminator  - RS485 half duplex with terminator 
#   rs485_full_terminator  - RS485 full duplex with terminator
#   rs422                  - alike rs485_full_terminator
#
#all.media rs232

# the parameter syslog_level was removed (see the syslog-ng.conf file)
# the parameter console_level was removed (see the syslog-ng.conf file)

#
# Authentication type - either "local", "none", "remote",
# "radius", "local/radius", "radius/local", "RadiusDownLocal",
# "TacacsPlus", "local/TacacsPlus", "TacacsPlus/local",
# "TacacsPlusDownLocal", "ldap", "kerberos",
# "ldapDownLocal" or "kerberosDownLocal".
#
# If the authentication type is configured as "local/radius" the portslave
# first tries to authenticate locally.  If it fails, portslave will try to
# authenticate using the RADIUS server.
#
# If the authentication type is configured as "RadiusDownLocal" the portslave
# first tries to authenticate using the RADIUS server.  If the RADIUS server
# sends back a rejection, authentication will fail.  Local authentication 
# will be tried only if the RADIUS server is down (timeout).
#
all.authtype    none
#
# This option determines whether Biometric authentication is required for
# serial port access.  Acceptable values are 1 (indicating that Biometric
# authentication is required), and 0 (indicating that it is not).
#
all.biometric	0
#
# Authentication host and accounting host.  Two of each can be configured
# per port. The first is tried 'radretries' times before the 
# second is tried. If 'radretries' is not configured, 5 is used by default.
# The parameter 'radtimeout' sets the timeout per query in seconds.
#
all.authhost1	192.168.160.3
all.accthost1	192.168.160.3
all.radtimeout	3
all.radretries	5
#all.authhost2	192.168.160.4
#all.accthost2	192.168.160.4
#
# The shared secret used by RADIUS/TacacsPlus.
#
all.secret	secret

#
# Default protocol. 
#
# Valid values are
#  CAS profile: "socket_server", "socket_ssh", "raw_data"
#  TS  profile: "login", "rlogin", "telnet", "ssh", "ssh2", "socket_client"
#  RAS profile: "slip", "cslip", "ppp", "ppp_only"
#  Power Management: "ipdu"
#  Serial Printer : "lpd"
#  Billing profile: "billing"
#
#  ACS1 only: 
#    Automation profile: "modbus", in this case, serial mode can be "ascii" or "rtu"
#
#  ppp_only ==> PPP over leased lines (only authentication PAP/CHAP)
#
#  ppp      ==> PPP with terminal post dialing (Auto detect PPP)
#
all.protocol		ipdu
#all.modbus_smode	ascii

#
# Default ip address of Linux host to which the terminals will connect. 
# Used by the protocols rlogin, ssh, socket_client, etc.
#
all.host	192.168.160.8

#
# IP Address assigned to the serial port.
# The '+' after the value causes the interfaces to have
# consecutive ip addresses. Ex. 192.168.1.101, 192.168.1.107, etc.
#
# The IP number of a port is used when the RADIUS
# server does not send an IP number, or if it tells us to use a dynamic IP no.
#
#all.ipno	192.168.1.101+
all.netmask	255.255.255.255

#
# Maximum reception/transmission unit size for the port
#
all.mtu		1500
all.mru		1500

#
# Standard message issued on connect.
#
all.issue       \r\n\
     Welcome to Console Server Management Server %h port S%p \n\
\r\n

# 
# Login prompt.
#
all.prompt	%h login: 

#
# Terminal type, for rlogin/telnet sessions.
#
all.term	vt100

#
# Linefeed suppression in telnet sessions
# When configured as 0, linefeed suppression will not be performed.
# When 1, linefeed suppression (after a CR) will be performed.
# When 2, NULL suppression (after a CR) will be performed
# For example, when telneting from DOS in Win 98, a newline character
# is returned in addition to the carriage return, so whenever you
# press Enter you will receive two prompts back. Allowing line feed
# suppression will eliminate this problem.
#
all.lf_suppress 0

#
# Telnet client mode
# If you use automatic telnet (all.protocol is TELNET)
# this parameter configured with 1 (Binary) causes an attempt to
# negotiate the TELNET BINARY option on both input and output 
# with the Telnet Server, so it puts the telnet client in binary mode.
#
#all.telnet_client_mode		0

#
# If you want the unit to update the login records (written to the 
# /var/run/utmp files), set sysutmp to 1. This is useful for tracking who is 
# accessing the unit and what he is doing.
#
all.sysutmp	1
all.utmpfrom    "%g:%P.%3.%4"    

#
# Use initchat to initialize the modem.
#
# d == delay (1 sec), p == pause (0.1 sec), l == toggle DTR
# r == <CR>, l == <LF>
#
#all.initchat    TIMEOUT 10 \
#		"" \d\l\dATZ \
#		OK\r\n-ATZ-OK\r\n "" \
#		TIMEOUT 10 \
#		"" ATM0 \
#		OK\r\n "" \
#		TIMEOUT 3600 \
#		RING "" \
#		STATUS Incoming %p:I.HANDSHAKE \
#		"" ATA \
#		TIMEOUT 60 \
#		CONNECT@ "" \
#		STATUS Connected %p:I.HANDSHAKE

#
# Serial port flow control:
#    hard - hardware, rts/cts
#    soft - software, CTRL-S / CTRL-Q
#    none.
#
all.flow	none

#
#  DCD signal (sets the tty parameter CLOCAL). Valid values are 0 or 1.
#     In a socket session, if all.dcd=0, a connection request (telnet or
#     ssh) will be accepted regardless of the DCD signal and the connection
#     will not be closed if the DCD signal is set to DOWN.
#     In a socket connection, if all.dcd=1 a connection request will be
#     accepted only if the DCD signal is UP and the connection (telnet or
#     ssh) will be closed if the DCD signal is set to DOWN.
#
all.dcd		0

#
# DTR_reset - (CAS profile) used as a flag to specify the behavior
#  of the DTR signal. If set to 0, the DTR signal will be ON if there
#  is a connection to the serial port, otherwise it will be OFF. If
#  If set from 1 - 99, the DTR signal will always be ON. A value
#  greater than or equal to 100 specifies how long (in milliseconds)
#  the DTR signal will be turned off before it is turned back on again
#  when a connection  to the serial port is closed.
#
all.DTR_reset	100

#
# PPP options - used if a PPP session is autodetected.
# Note that mru and mtu are both set to the MTU setting.
# Callback server is enabled when cb-script parameter is set
# with the shell script /etc/portslave/cb_script, so include the
# line : "cb-script /etc/portslave/cb_script".
#
#all.autoppp	%i:%j novj \
#		proxyarp modem asyncmap 000A0000 \
#		noipx noccp login auth require-pap refuse-chap \
#		mtu %t mru %t \
#		ms-dns 192.168.160.5 ms-dns 0.0.0.0 \
#		plugin /usr/lib/libpsr.so 

#
# PPP options - User already authenticated and service type is PPP.
#
#all.pppopt	%i:%j novj \
#		proxyarp modem asyncmap 000A0000 \
#		noipx noccp mtu %t mru %t netmask %m \
#		idle %I maxconnect %T \
#		ms-dns 192.168.160.5 ms-dns 0.0.0.0 \
#		plugin /usr/lib/libpsr.so 
#

#
# When not set to zero, this parameter sets the wait for a TCP connection 
# keep-alive timer. If no traffic passes through the unit for 
# this period of time (ms), the unit will send a modem status
# message to the remote device to see if the connection is still up.
#
#all.poll_interval	1000

#
# Transmission interval - Controls the interval between two consecutive data
#                         packets transmitted to the Ethernet. Only valid for
#                         protocols socket_server, raw_data, and socket_client.
#
# Valid values : 0 - transmit packet immediately (no interval).
#                10, 20, 30, ... interval in milliseconds.
#
#all.tx_interval 100

#
# Inactivity timeout - Defines the time in minutes that a connection can
#                      remain without activity (rx/tx). Only for CAS profile
#                      (socket_client protocol) and modbus.
#
#all.idletimeout 5

#
# This defines an alternative labeling system for the ports on the unit.  
# This parameter is used by the protocols telnet, socket_client and
# socket_server. It is mandatory if the protocol is socket_server, otherwise
# 23 will be used.
# 
# The '+' after the numerical value causes the interfaces to be numbered 
# consecutively.  Ex. 7001, 7002, 7003, etc.
#
all.socket_port		7001+

#
# Billing file size configuration
#
# A non-zero value defines the maximum number of billing records within
# a billing file. Zero stops billing recording.
# The billing files are located at /var/run/DB and are named
# cyXXXXX-YYMMDD.hhmmss.txt
#
# ex: cyttyS1-030122.153611.txt
#
all.billing_records     50

#
# Billing timeout configuration
#
# A non-zero value defines how long (minutes) a billing file should be waiting
# for records before close. After a file is closed, this file is available for
# transfer at /var/run/DB and a new one is opened. Zero means "no timeout"
# and so the file is only closed after "billing_records" are received.
#
all.billing_timeout     60

#
# Billing record termination configuration
#
# Defines the character sequence that terminates each billing record.
# Any character sequence is valid, including '\r' or '^M' (carriage return),
# '\n' or '^J' (new line), etc...
#
all.billing_eor       "\n"

#
# Data buffering configuration
#
# A non-zero value activates data buffering. The number is equal to the
# buffer size. A file /var/run/DB/{ttyS#.data | alias} is created on
# the unit and all data received from the port is captured.
# The files for all buffered ports combined can contain up to the amount
# of available memory in the ram disk. This amount can be discovered
# by typing: "df<enter>".
# Each file is a revolving file which is overwritten as the limit of buffer 
# size is reached. These files can be viewed using the normal Unix tools 
# (cat, vi, more, etc.).
# If there is not enough available ram disk, NFS_buffering can be used.  There
# is effectively no limit to NFS buffer size.  
#
all.data_buffering 0

#
# DB_mode - Valid only when there is NO session (telnet/ssh/raw) established
#	to the serial port; when configured as cir for circular
#	format, the buffer is like a revolving file that is overwritten whenever
#	the limit of the buffer size (as configured in all.data_buffering or 
#	s<n>.data_buffering) is reached. When configured as lin for linear format, 
#	once 4k bytes of the Rx buffer in the kernel is reached, a flow control stop (RTS off
#	or XOFF-depending on how all.flow or s<n>.flow is set) is issued to prevent
#	the serial port from receiving further data from the remote. Then when a 
#	session is established to the serial port, a flow control start (RTS on or XON)
#	will be issued and data reception will then resume. If all.flow or s<n>.flow 
#	is set to none, neither linear nor circular buffering is possible. 
#	Default is cir.
#
all.DB_mode		cir

#
# Data Buffer User Logs
#
# When "on", a line containing the time stamp, the username, the event itself (connection/
# disconnection) and the type of session (Read/Write or Read Only) will be added to the data
# buffering file every time a user connects or disconnected to the corresponding port.
#
all.DB_user_logs	off

#
# When non-zero, the contents of the data buffer are sent to the syslog 
# server every time a quantity of data equal to this parameter is collected.
# [40 to 255 recomended].
# Basically, this allows you to send port-generated messages or data coming
# in on the port to a remote syslog server.  This could be used to log messages
# regarding errors or warnings sent by the device. The messages saved onto the
# remote syslog server can then be viewed by administrative users.
#
# The syslog level in syslog-ng.conf should be greater than or
# equal to 5 (warn..debug).
#
all.syslog_buffering 0

#
# Syslog_sess
# Syslog_buffering must be activated for the following to work.
# When 0, syslog messages are always generated whether or not 
# there is a session to the port sending data to the unit.
# When 1, syslog messages are NOT generated when there IS a session
# to the port sending data to the unit, but resumes generation of
# syslog messages when there ISN'T a session to the port.
#
all.syslog_sess               0

#
# Auto Answer Input/Output
# This parameter (auto_answer_input) allows you to configure a string
# that will be matched against the data coming in from the tty.
# If there is a match, the configured output string (auto_answer_output)
# will then be send back to the tty.
# This parameter works only when there is no session to the port.
# And of course, the parameters are dependent on each other so both
# must be configured in order for this feature to work.
# To represent the ESC (0x1b in hex) character in your string, use the
# control character ^[.
# Example usage: Communicating with BIOS of server.
#   If remote server is a Dell Poweredge Server 1650
#		all.auto_answer_input   ^[[c
#   If remote server is a Dell Poweredge Server 2550
#		all.auto_answer_input   ^[[5n
#   For either of these servers, the returned string should be
#		all.auto_answer_output  ^[[?1;2c
#
#all.auto_answer_input      ^[[c
#all.auto_answer_output     ^[[?1;2c

#
# Alarm configuration
#
# A non-zero value activates alarm. All data received from the port is
# captured and sent to syslog-ng with facility LOCAL<DB_facility> and
# priority INFO and the format of the message is "ALARM (ttySx) [data]"
#
all.alarm	0

#
# XML Monitor configuration (To be used with Windows Server 2003)
#
# A non-zero value activates XML monitoring. All XML data received from the 
# port is captured and sent to syslog-ng with facility LOCAL<DB_facility> 
# and priority INFO and the format of the message is 
# "XML_MONITOR (ttySx) [data]". 
# XML tags are sent by Windows Server 2003 Emergency Management Services
# during boot or crash.
# Read more about XML_MONITOR in /etc/syslog-ng/syslog-ng.conf.
#
#all.xml_monitor 1
 
#
# Controls the presentation of the Data buffering menu
#
# MENU:
# "A non-empty Data Buffering File was found. Choose which action
#  should be performed ( (I)gnore, (D)isplay, (E)rase or (S)how and erase ) :"
#
#  valid values:
#   0 - Shows the menu with all options.
#   1 - Doesn't show the menu and any non-empty data buffering file
#   2 - Doesn't show the menu but shows a non-empty data buffering file
#   3 - Shows the menu without the options "erase" and "show and erase".
#
#all.dont_show_DBmenu 1

#
# Data Buffering timestamp <MMM/dd hh:mm pm>
#
# If enabled (1) the unit will add a timestamp to each line written
# in the data buffering file. A line is delimited by any combination
# of LF and CR. Also, syslog data buffering will be written line by line
# suppressing all LFs and CRs.
#
#all.DB_timestamp 1

# 
# Setting options for a serial port	
#
# When enabled and set with options, the TTY is set with the 
# options specified. 
# The following example sets:
# -igncr: Do not ignore the carriage-return on input.
# -onlcr: Do not map newline character to a carriage-return/newline 
# character sequence on output.
# opost: Post-process output
# -icrnl: Do not map carriage-return to a newline character on input.
# Make sure there is a space between each option.
#
#all.sttyCmd 	-igncr -onlcr opost -icrnl


#
# Send Break to the TTY when this string is received (ssh or telnet). 
#
all.break_sequence ~break

# the break interval in miliseconds
all.break_interval 500

#
# Translation - Defines whether or not to perform translation of Fn-keys
# (e.g. F8 key) from one terminal type to VT-UTF8.
# Currently only translation from xterm to VT-UTF8 is supported.
#
#
#all.translation      xterm

#
# Windows Emergency Management Services (EMS)
# Defines whether or not management of Windows
# Emergency Management Service is allowed from the our web services.
# Valid entries are: yes or 1 and no or 0.
# 
#all.web_WinEMS  no

#
# Authentication of RADIUS users registered without passwords
#
# When enabled (value 1) and a user registered in
# the RADIUS database with a blank password tries to log in, the user
# is authenticated.  This is a very weak level of security since
# a user would only need to know that a particular username exists.
# This does not affect RADIUS users registered with passwords.
#
all.radnullpass 0

#
# Automatic User Definition (more useful when used with a specific port)
#
# This parameter is only used if the port is configured as a Terminal Server (TS profile)
# (login, telnet, rlogin, ssh and ssh2) and authentication type 'none'.
#
#all.userauto edson

#
# Port access restriction (more useful when used with a specific port).
#   A single comma and spaces/tabs may be used between names.   
#   A comma may not appear between the ! and the first user name.  
#   The users do not need to be local users (in passwd).
#
# In this example, the users joe and mark CANNOT access any serial port
#
#all.users ! joe, mark
#
# In this example, ONLY the users joe and mark CAN access any serial port
#
#all.users   joe, mark

#
# Serverfarm is an alias name for a server connected to the unit
# through one of its serial ports (only useful if assigned to a specific port).
# This alias is used as the name of the data buffering file, and in the ssh
# command to select a serial port that would be configured as "socket_ssh".
#
# The value entered here should be the same as used in the ssh command. Ex.
#
# ssh -t <username>:<server_connected_to_serial1>@<tsname>  or
# ssh -t -l <username>:<server_connected_to_serial1> <tsname>
#
# PS. How alias is used as command line parameter and also as a filename
#     it can not have the characters '~', '*', '?', ' ', and '/'.
#
#s1.alias server_connected_to_serial1

#
# Sniff session mode (in, out, i/o, no). With this parameter the user can select
# which data will be sent to the monitor. The default is "no".
#
all.sniff_mode no

#
# Multiple sessions. Enable this parameter to allow multiple
# sniffers or read/write sessions at the same tty port, when the port
# protocol is "socket_server", "socket_ssh" or "raw_data".
#
#  valid values:
#
# no            - only one sniff session + one normal session are allowed
#                 (old style). The sniff menu will be presented.
# yes           - Multiple read/write sessions + multiple sniff sessions
#                 are allowed. The multiple sniff menu will be presented.
# RW_session    - read/write sessions will be opened without menu presentation
# sniff_session - sniff sessions will be opened without menu presentation
#
# Also, the parameter admin_users must be filled out.
#
#all.multiple_sessions no

#
# Escape character (^a,...,^z). This parameter determines which character
# must be typed to make the session enter into "menu mode". The possible values
# are <CTRL-a> to <CTRL-z>, and it is only valid for CAS profile.
#
#all.escape_char ^z

#
# Users that are allowed to sniff sessions (administrator). This field has
# the same format as "all.users", but the '!' should be used used with CAUTION.
#
# In this example, ONLY the users joe, mark, and peter CAN access any
# serial port (to create first session) but ONLY the user peter can
# sniff or cancel another session.
#
#all.users		joe, mark
#all.admin_users	peter

#
# Multiple User notification selects if users of a certain serial port should receive
# a warning message every time a new user logs in or out.
#
all.multiuser_notif	off

#
# Power Management
# This parameter specifies the Intelligent Power Distribution Unit (IPDU)
# manufacturer. We currently support IPDU from Cyclades (cyclades).
# The configuration file of IPDU is /etc/pm.cyclades file.
#
all.pmtype  cyclades

#
# Power Management
# A list of the outlets each user can access.
# For example: Joe: 6,3; Helen: 1,3.
#
#all.pmusers

#
# Power Management
# List of pairs <ipdu port>.<outlet> where the server is connected.
# <ipdu port> is the port number of the ACS/TS where the IPDU is
# connected to. <outlet> is the outlet number on the IPDU where the
# your server is connected to.
# For example: 1.8
#
#all.pmoutlet

#
# Power Management
# This is the hotkey which causes the switch from the normal socket
# telnet/ssh session to the PMD session, and vice-versa.
# For example, ^p (Ctrl-p).
#all.pmkey   ^p

# Power Management
#
# Serial port pool parameters (Dynamic serial port allocation for CAS only).
#
# The Serial port pool feature has three specific parameters: pool_ipno,
# pool_socket_port, and pool_alias. They have the same meaning as
# ipno, socket_port, and alias respectively. Two serial ports will
# belong to the same pool only if they have the same set of values for
# these three parameters.
# 
# PS. How pool_alias is used as command line parameter it can not have
#     the characters '~', '*', '?', ' ', and '/'.
#
# In the example below all ports belong to the same pool.
#
#all.pool_ipno				192.168.60.1
#all.pool_socket_port		13000
#all.pool_alias		all-ports-pool
# 
# In the example below the ports s2 and s3 belong to the same pool and can
# only be accessed through the pool_ipno.
#
#s2.pool_ipno				192.168.60.60
#s2.pool_socket_port		0
#s2.pool_alias			""
#
#s3.pool_ipno				192.168.60.60
#s3.pool_socket_port		0
#s3.pool_alias			""



#
# Port-specific parameters
#
s1.tty		ttyA1
s1.protocol	ipdu

conf.eth_ip 192.168.48.159
conf.eth_mask 255.255.252.0
